CREATE TABLE IF NOT EXISTS Events(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR(255),
    City VARCHAR(255)
);


CREATE OR REPLACE FUNCTION check_city_limit_and_duplicates()
RETURNS TRIGGER AS $$
BEGIN
    -- Проверяем, есть ли дубликаты по Name
    IF EXISTS (SELECT 1 FROM Events WHERE Name = NEW.Name) THEN
        -- Удаляем старую запись с таким же Name
        DELETE FROM Events WHERE Name = NEW.Name;
    END IF;

    -- Проверяем количество записей с указанным значением City
    IF (SELECT COUNT(*) FROM Events WHERE City = NEW.City) >= 3 THEN
        -- Удаляем самую старую запись (по минимальному id)
        DELETE FROM Events
        WHERE id = (
            SELECT MIN(id)
            FROM Events
            WHERE City = NEW.City
        );
    END IF;

    -- Возвращаем новую запись для вставки
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;


CREATE TRIGGER enforce_city_limit_and_duplicates
BEFORE INSERT ON Events
FOR EACH ROW
EXECUTE FUNCTION check_city_limit_and_duplicates();